       SUBROUTINE IGRIDS(LOWMACH,IHIMACH,LOWALT,IHIALT,INLAST,IPSS,NPS)
$include:'xypnts.inc'
        COMMON /IO/      NPRNT,IOIN
        COMMON /PARMS/   PS,PSA(5),LASTM,LASTALT,NEXTM,NEXTALT,LASTIN,
     +                   LASTOUT
        COMMON /RUNDATA/ XMMIN,ALTMAX,DMACHC,DALTC,NMACH,NALT,
     +                   NOSAVE,ITEMID,IDISP,ICTSUB
        DIMENSION IEF(2),IDF(16),IGF(16),IPSS(128)
        LOGICAL LEFT1,LEFT2,RIGHT1,RIGHT2,LEFT,RIGHT,TOP,BOT,DUP,CHECK,
     +          BTST,NOSAVE
        DATA SMVAL/0.00001/
        BTST=.FALSE.
C
C  CALCULATE NUMBER OF WORDS FOR NUMBER OF INTERVALS
        I4OFF = ( NPS + 15 ) / 16
C
        DO 1000 IA=LOWALT,IHIALT
        DO 1000 IM=LOWMACH,IHIMACH
        IALT=IA-1
        IMACH=IM-1
        IF(INLAST.EQ.0) GO TO 450
 50     RV1=RGRID(IMACH,IALT)
        RV2=RGRID(IMACH+1,IALT)
        RV3=RGRID(IMACH  ,IALT+1)
        RV4=RGRID(IMACH+1,IALT+1)
        IF(RV1.GT.SMVAL.AND.RV2.GT.SMVAL.AND.RV3.GT.SMVAL.AND.
     +     RV4.GT.SMVAL) GO TO 450
C        BAD DATA PART OF SQUARE
        GO TO (100,200,300,400),INLAST
 100    IF(ABS(RV1).GT.SMVAL .AND. ABS(RV4).GT.SMVAL) THEN
            GO TO 1000
        ENDIF
        IALT=IALT+1
        IF(RV2.EQ.0 .OR. RV3.EQ.0) IALT=IALT+1
        IF(IALT.GE.NALT) THEN
            GO TO 1000
        ENDIF
        GO TO 50
 200    IF(ABS(RV1).GT.SMVAL .AND. ABS(RV2).GT.SMVAL) THEN
            GO TO 1000
        ENDIF
        IMACH=IMACH+1
        IF(RV3.EQ.0 .OR. RV4.EQ.0) IMACH=IMACH+1
        IF(IMACH.GE.NMACH) THEN
            GO TO 1000
        ENDIF
        GO TO 50
 300    IF(ABS(RV2).GT.SMVAL .AND. ABS(RV3).GT.SMVAL) THEN
            GO TO 1000
        ENDIF
        IALT=IALT-1
        IF(RV1.EQ.0 .OR. RV4.EQ.0) IALT=IALT-1
        IF(IALT.LE.1) THEN
            GO TO 1000
        ENDIF
        GO TO 50
 400    IF(ABS(RV3).GT.SMVAL .AND. ABS(RV4).GT.SMVAL) THEN
            GO TO 1000
        ENDIF
        IMACH=IMACH-1
        IF(RV1.EQ.0 .OR. RV2.EQ.0) IMACH=IMACH-1
        IF(IMACH.LE.1) THEN
            GO TO 1000
        ENDIF
        GO TO 50
 450    DO 900 IPS=1,NPS
        CALL IGRIDF(IMACH,IALT,IDF)
        DO 460 I=1,I4OFF
          IF(IDF(I).NE.0) GO TO 470
  460   CONTINUE
        GO TO 1000
  470   CONTINUE
        NBIT=MOD(IPS,16)-1
        IF(NBIT.LT.0)NBIT=15
        NWRD=(IPS+15)/16
        I4X=NWRD + I4OFF
        MASK = 0
        MASK = IBSET(MASK,NBIT)
        BTST=BTEST(IDF(NWRD),NBIT)
        IF(.NOT. BTST) GO TO 900
        PS=FLOAT(IPSS(IPS))
        NEXTM=IMACH
        NEXTALT=IALT
        LASTOUT=INLAST
        NUM=0
        ICNT=0
C
C.......PROCESS NEXT POINT IN CURRENT CONTOUR
C
C       IF ONLY DUPLICATE POINTS HAVE BEEN GENERATED AFTER 5 TRIES
C       (THIS HAPPENS WHEN A CONTOUR DEGENERATES INTO A POINT) PROCEED
C       TO LOOK FOR OTHER CONTOURS
C
 500    continue
      IF (ICNT.GE.5 .AND. NUM.EQ.1) THEN
            GO TO 1000
        ENDIF
        NUM=NUM+1
        LASTM=NEXTM
        LASTALT=NEXTALT
        LASTIN=LASTOUT
        IF(LASTALT.NE.0.AND.LASTM.LT.NMACH)PSA(1)=RGRID(LASTM+1,LASTALT)
        IF(LASTALT.NE.0 .AND. LASTM.NE.0) PSA(2)=RGRID(LASTM,LASTALT)
        IF(LASTM.NE.0.AND.LASTALT.LT.NALT) PSA(3)=
     +     RGRID(LASTM,LASTALT+1)
        IF(LASTM.LT.NMACH.AND.LASTALT.LT.NALT)PSA(4)=
     +     RGRID(LASTM+1,LASTALT+1)
        PSLOW=AMIN1(PSA(1),PSA(2),PSA(3),PSA(4))
        PSA(5)=PSA(1)
        IF(PSLOW.GT.0.) GO TO 525
C          STOPPED SEARCH BECAUSE BOX ENCOUNTERED WITH BAD POINT IN IT
        IF ( NUM.EQ.1 ) GO TO 900
        NUM=NUM-1
        GO TO 700
C         CONTINUE SEARCH
 525    IF(NUM.GT.1) GO TO 600
        IF(LASTIN.NE.0) GO TO 590
C          IF LASTIN IS 0, FIND OUT HOW TO ENTER BOX
        DO 550 LASTIN=1,4
        PSLOW=AMIN1(PSA(LASTIN),PSA(LASTIN+1))
        PSHI =AMAX1(PSA(LASTIN),PSA(LASTIN+1))
        IF(PSLOW.LE.PS .AND. PS.LT.PSHI) GO TO 600
 550    CONTINUE
        GO TO 900
 590    PSLOW=AMIN1(PSA(INLAST+1),PSA(INLAST))
        PSHI =AMAX1(PSA(INLAST+1),PSA(INLAST))
        IF(PSLOW.GT.PS .OR. PS.GE.PSHI) GO TO 900
 600    CALL GETXY(XNUM,YNUM)
C
C.......IF THIS IS NOT THE FIRST POINT IN THE CONTOUR, CHECK FOR IT
C       BEING A DUPLICATE POINT.  THIS HAPPENS WHEN THERE IS A CELL
C       WITH Z-VALUE AT THE CONTOUR LEVEL.
C
        DUP=.FALSE.
        CHECK=.FALSE.
        IF (NUM.GT.1) CHECK=.TRUE.
        IF (CHECK) then
           call spoints('X ',x,xnum1,num-1,1)
           call spoints('Y ',y,ynum1,num-1,1)
           IF((ABS(XNUM-XNUM1)).EQ. 0 .AND.
     1     (ABS(YNUM-YNUM1)).EQ.0) DUP=.TRUE.
        endif
 602    CONTINUE
        IF (.NOT. DUP) then
             call spoints('X ',x,xnum,num,2)
             call spoints('Y ',y,ynum,num,2)
         endif       
c        IF (.NOT. DUP) X(NUM) = XNUM
c        IF (.NOT. DUP) Y(NUM) = YNUM
        IF (DUP) NUM=NUM-1
        IF(NUM.NE.1) GO TO 610
        IF(LASTM.NE.1 .AND. LASTM.LT.NMACH-1 .AND. LASTALT.NE.1 .AND.
     +              LASTALT.LT.NALT-1) GO TO 610
        NUM=NUM+1
        call spoints('X ',x,xnum,num,2)
        call spoints('Y ',y,ynum,num,2)
c        X(NUM) = XNUM
c        Y(NUM) = YNUM
        LEFT1=.FALSE.
        RIGHT1=.FALSE.
        LEFT2=.FALSE.
        RIGHT2=.FALSE.
        LEFT=.FALSE.
        RIGHT=.FALSE.
        TOP=.FALSE.
        BOT=.FALSE.
        XN=XNUM
        YN=YNUM
C.......IF PRESEN COLUMN = 1, EXTRAPLOLATE HORIZONTALLY TO LEFT
        IF(LASTM.EQ.1) LEFT1=.TRUE.
        IF (LEFT1) XN=XMMIN
C.......IF PRESENT COL IS LAST COL, EXTRAPOLATE HORIZONTALY TO RIGHT
        IF(LASTM.GE.NMACH-1) RIGHT1=.TRUE.
        IF (RIGHT1) XN=XMMIN+LASTM*DMACHC
C.......IF PRESENT ROW = 1, EXTRAPOLATE VERTICALLY TO TOP
        IF(LASTALT.EQ.1) TOP=.TRUE.
        IF (TOP) YN=ALTMAX
C.......IF PRESENT ROW IS LAST ROW, EXTRAPOLATE VERTICALLY TO BOTTOM.
        IF(LASTALT.GE.NALT-1) BOT=.TRUE.
        IF (BOT) YN=ALTMAX-LASTALT*DALTC
C.......EXTRAPOLATE HORIZONTALLY
        IF(LOWMACH.EQ.NMACH .AND. LASTM.EQ.NMACH-1) RIGHT2=.TRUE.
        IF (RIGHT2) XN=XMMIN+NMACH*DMACHC
C.......EXTRAPOLATE VERTICALLY
        IF(LOWALT.EQ.NALT .AND. LASTALT.EQ.NALT-1) LEFT2=.TRUE.
        IF (LEFT2) YN=ALTMAX-NALT*DALTC
C
C.......IF CONTOUR LINE ENTERS ONE OF THE FOUR CORNER CELLS, RESET
C       X COORDINATE TO ORIGINAL VALUE, SO THAT CONTOURS DO NOT MEET
C
        IF (LEFT1.OR.LEFT2) LEFT=.TRUE.
        IF (RIGHT1.OR.RIGHT2) RIGHT=.TRUE.
        IF ((TOP.AND.LEFT) .OR. (TOP.AND.RIGHT)) XN=XNUM
        IF ((BOT.AND.LEFT) .OR. (BOT.AND.RIGHT)) XN=XNUM
        call spoints('X ',x,xn,num-1,2)
        call spoints('Y ',y,yn,num-1,2)
c        X(NUM-1) = XN
c        Y(NUM-1) = YN
 610    DO 612 IJ=1,(I4OFF*2)
          IGF(IJ)=0
 612    CONTINUE
        IF(LASTM.LT.NMACH .AND.LASTALT.LT.NALT)
     +     CALL IGRIDF(LASTM,LASTALT,IGF)
        DO 615 IJ=1,(I4OFF*2)
          IDF(IJ)=IGF(IJ)
 615    CONTINUE
        IEF(1) = IDF(NWRD)
        IEF(2) = IDF(I4X)
C
C       NXP RETURNED AS = 0: LAST POINT CALCULATED WAS LAST POINT OF A
C        CLOSED CONTOUR. -1: LAST POINT CALCULATED WAS LAST POINT OF AN
C        OPEN CONTOUR.    1: LAST POINT CALCULATED WAS NOT A LAST POINT
C        OF THE CONTOUR.
C
        NXP=NEXTPT(IEF,MASK,INLAST,NUM)
        ICNT=ICNT+1
        IDF(NWRD) = IEF(1)
        IDF(I4X) = IEF(2)
C        WRITE(NPRNT,619)NWRD,I4X,IDF(NWRD),IDF(I4X)
C  619   FORMAT(' AFT',2I5,2(1X,I4))
C  FLAG CHANGE
        DO 618 IJ=1,(I4OFF*2)
        IF(IGF(IJ).NE.IDF(IJ)) GO TO 620
  618   CONTINUE
        GO TO 622
  620   CONTINUE
C        WRITE(*,*) 'IGRIDS: BEFORE IGRIDP; LASTM,LASTALT,IDF',
C     -  LASTM,LASTALT,IDF
        CALL IGRIDP(LASTM,LASTALT,IDF)
  622   IF(NXP) 625,700,500
 625    CONTINUE
        NUM=NUM+1
        call spoints('X ',x,xnum,num-1,1)
        call spoints('Y ',y,ynum,num-1,1)
c        XNUM=X(NUM-1)
c        YNUM=Y(NUM-1)
        IF(LASTALT.GE.NALT) YNUM=YNUM-DALTC/2.
        IF(LASTM.GE.NMACH ) XNUM=XNUM+DMACHC/2.
        IF(LASTM.EQ.0) XNUM=XMMIN
        IF(LASTALT.EQ.0) YNUM=ALTMAX
C        CALL PUTRX(NUM,XNUM)
C        CALL PUTRY(NUM,YNUM)
        call spoints('X ',x,xnum,num,2)
        call spoints('Y ',y,ynum,num,2)
c        X(NUM) = XNUM
c        Y(NUM) = YNUM
 700    CONTINUE
        IF(NUM.LE.2) GO TO 900
C
C          OUTPUT X,Y ARRAYS
C
        IF (NXP.EQ.0) NUM=NUM-1
        CALL PLOUT(NUM,IPSS(IPS),IPS)
 900    CONTINUE
 1000   CONTINUE
        RETURN
        END
