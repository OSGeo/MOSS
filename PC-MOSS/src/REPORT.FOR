$Include:'io.inc'
        COMMON /WHMAP/  ISTRCT(300),NSTRCT
$Include:'work.inc'
$Include:'strng.inc'
        COMMON /FLS/    IUNIT,IFILE(5)
        COMMON /TYPE/   IDATYP(40),NACTS
        COMMON /TABLE/  ITABLE(40)
        COMMON /UNIT/   CHANEL,ATRBTE,POLYGON,ADRESS
        COMMON /REPCOM/ IHEAD(10,3),LABEL(10,10),ITIT(132),
     1 IVALS,IV(2),AREA(2500),LAREA(10),LLEN(10),ITEM(2500)
$Include:'dbchan.inc'
        INTEGER CHANEL,ATRBTE,POLYGON,ADRESS,MBR(8),mapin(25)
        INTEGER UPPER,isub(15),mapname(25),times,ihard(8)
        DIMENSION IARE(2),NCARD(132),IHEADB(50,3),LABELB(50,10)
        character*10 NUMB
        character*8 harder
        LOGICAL FOUND,OAREA,NAREA,OSUB,HARD,LABL,MCOMP,CRE
        REAL IREC1,MNDEX,INTO,LOUT,WHERE(10)
        EQUIVALENCE (RNUM,IV(1)),(ARE,IARE(1)),(ihard(1),harder)
        DATA IBLK/32/,IFF/12/
C
C ***************************************************************
C
C
C               P R O G R A M    R E P O R T
C
C  FUNCTION:  GENERAL PURPOSE REPORT GENERATION FROM MOSS
C             ASSOCIATED ATTRIBUTES FILE
C **************************************************************
C
C  INITIALIZE COMMON
C
       harder='hard.cpy'
       larea(7)=ichar('A')
       larea(8)=ichar('R')
       larea(9)=ichar('E')
       larea(10)=ichar('A')
       do 1 l=1,6
       llen(l)=32
    1  larea(l)=32
       llen(5)=ichar('L')
       llen(6)=ichar('E')
       llen(7)=ichar('N')
       llen(8)=ichar('G')
       llen(9)=ichar('T')
       llen(10)=ichar('H')
C
       CALL initl(ier)
        IUNITS=0
        HARD=.FALSE.
C
C  OPEN DATA CHANNEL TO TEK
C
C        CALL OPEN (IUNIT,IFILE,2,IER)
C
C  OPEN CHANNEL TO TEMP FILE
C
      map(1)=2hCX
      CALL OPENF(88,map,3,2,2,IER)
C
C  GET ACTIVE DATA SET ID
C
        CALL DAGET(ICARD,icardp,ITABLE,40,MACTS)
        IF(MACTS.GT.0) GO TO 10
C
C  PROMPT FOR ACTIVE MAP ID
C
        WRITE(NPRNT,1000)
 1000   FORMAT(' ENTER ACTIVE MAP ID TO REPORT '\)
        CALL READIN(ICARD,lenicd,icardp,istop)
        CALL DAGET(ICARD,icardp,ITABLE,40,MACTS)
        LINES=LINES+3
        IF(MACTS.LE.0) GO TO 900
C
C  OPEN HARDCOPY FILE , IF SPECIFIED
C
  10  CONTINUE
       KK=K
       CALL CLEAR(MAP,25)
       CALL DECIP(ICARD,ICOM,icardp)
       IF (ICOM(1).NE.0) GO TO 108
       WRITE (NPRNT,101)
 101   FORMAT (' ENTER "HARD" OR <FILENAME> FOR HARDCOPY OUTPUT'/
     1 ' <RETURN> FOR SCREEN OUTPUT'\)
       CALL READIN (ICARD,lenicd,icardp,istop)
       CALL DECIP (ICARD,ICOM,icardp)
 108   CONTINUE
       IF (ICOM(1) .EQ. 0) GO TO 13
       IF(.NOT. MCOMP(ICOM,'HARD',4,IER)) GO TO 11
       HARD =.TRUE.
       CALL OPENF(44,ihard,0,0,0,IER)
       IF(IER.NE.0) GO TO 916
       ICHAN4=44
       GO TO 13
C
C  NAMED OUTPUT FILE
C
  11   CONTINUE
       HARD = .TRUE.
       CALL PACKC(ICOM,MAP,10)
       call openf(44,map,0,0,0,ier)
       ICHAN4=44
C
C      UNLABELED OUTPUT OPTION
C
   13  CONTINUE
       WRITE (NPRNT,1210)
 1210  FORMAT (' DO YOU WANT COLUMN HEADINGS IN OUTPUT [YES] '\)
       CALL READIN (ICARD,lenicd,icardp,istop)
       LABL=.TRUE.
       IF (MCOMP(ICARD(1),'N',1,IER)) LABL=.FALSE.
C
       IWIDE=6
       IWIDTH=72
       IF(HARD) IWIDE=10
       IF(HARD) IWIDTH=124
C
C      GET NAME OF MAP FROM STRUCTURE TABLE
C
        INDEX=ITABLE(1)
C
C  OPEN POINTER FILE
C
c        CALL OPENF(icdcfa,idesfa,1,512,2,IER)
c        IF(IER.NE.0) GO TO 911
C
C  OPEN MAP FILE
C
        CALL GTNAM(INDEX,0,2h  ,MAP,IER)
        call adddir(map,mapin)
        CALL OPENF(10,mapin,1,256,2,IER)
        IF(IER.NE.0) GO TO 901
        CALL RDBLK(10,1,IBUFF,1,IER)
        IDTYP = IBUFF(62)
C
C  OPEN ATTRIBUTE FILE
C
        CHANEL=30
        CALL GTNAM(INDEX,4,2h  ,MAP,IER)
        call adddir(map,mapname)
        CALL OPENF(30,mapname,1,256,2,IER)
        IF(IER.NE.0) GO TO 902
C
C  INITIALIZE ATTRIBUTE FILE
C
        CALL INITIAL
C
C  ENTER LOOP TO GET ITEM NUMBERS TO BE USED IN TABLE LOOKUP
C  IN ATTRIBUTE DATABASE
C
        CALL APGET(INDEX,ISTART,ISTOP,NTOTAL)
        IF(NTOTAL.GT.2500) GO TO 905
        KOUNT=0
        DO 65 II=ISTART,ISTOP
          KOUNT=KOUNT+1
          CALL GETFAST(II,MBR,IPOINT,ISUBJ,IATTR,IXTRa,IER)
          ITEM(KOUNT)=IPOINT
  65    CONTINUE
C
C  PUT IN ASCENDING ORDER
C
        ISORT=1
        IF (KOUNT.GT.1) CALL BSORT(KOUNT,ITEM,ISORT)
C
C
C  GET THE AREA INFORMATION AND RELOAD ITEM NUMBERS
C
        DO 70 II=1,KOUNT
C
C  GET DATASET POINTER
C
        IPOINT=ITEM(II)
C
C  GET ITEM HEADER
C
        CALL RDBLK(10,IPOINT,IBUFF,1,IER)
C
C  GET AREA OR LENGTH
C
        IARE(1)=IBUFF(7)
        IARE(2)=IBUFF(8)
        IF (IDTYP .EQ. 2 .AND. IUNITS .EQ. 1)
     +      ARE = ( ARE * 1609.35 ) / 1000.
        IF (IDTYP .EQ. 3 .AND. IUNITS .EQ. 1)
     +      ARE = ( ARE * 4046.856422 ) / 10000.
        AREA(II)=ARE
C
C  GET ITEM NUMBER AND STORE
C
        ITEM(II)=IBUFF(5)
C
  70    CONTINUE
C
C  ASK THE USER, IF THEY WISH THE POLYGON AREAS TO ALSO BE OUTPUT
C
        OSUB = .FALSE.
        OAREA=.FALSE.
        NAREA=.FALSE.
        IF (IDTYP .NE. 3) GO TO 1013
        WRITE (NPRNT,1090)
 1090   FORMAT(' DO YOU WISH POLYGON AREAS OUTPUT [NO]'\)
        CALL READIN(ICARD,lenicd,icardp,istop)
        IF(ICARD(1).EQ.89) OAREA=.TRUE.
C
 1013   IF (IDTYP .NE. 2) GO TO 14
        WRITE(NPRNT,1091)
 1091   FORMAT(' DO YOU WISH LINE LENGTHS OUTPUT [NO]'\)
        CALL READIN(ICARD,lenicd,icardp,istop)
        IF(ICARD(1).EQ.89) OAREA=.TRUE.
C
  14   WRITE(NPRNT,1092)
 1092  FORMAT(' DO YOU WISH SUBJECTS OUTPUT [NO]'\)
       CALL READIN(ICARD,lenicd,icardp,istop)
       IF(ICARD(1).EQ.89) OSUB=.TRUE.
  19    CONTINUE
C
C  GET FIELD NAMES FOR COLUMNS HEADINGS AND CHECK THEIR INTEGRITY
C......STORE PROMPTED INFO IN BUFFERS IHEADB,LABELB
C
        ICOLS = 0
  20    CONTINUE
           IF (ICOLS .EQ. 50) GO TO 22
           WRITE(NPRNT,91234) ICOLS + 1
91234      FORMAT(' FOR COLUMN ',I2)
           CALL RETRVL(FOUND,IBUFF)
           IF(.NOT.FOUND) GO TO 22
           ICOLS = ICOLS + 1
           IHEADB(ICOLS,1)=IBUFF(84)
           IHEADB(ICOLS,2)=IBUFF(85)
           IHEADB(ICOLS,3)=IBUFF(86)
           DO 17 J=1,10
              LABELB(ICOLS,J)=IBUFF(J+1)
              IF(LABELB(ICOLS,J).EQ.0) LABELB(ICOLS,J)=IBLK
  17       CONTINUE
        GO TO 20
C
  22    CONTINUE
        IF (ICOLS .EQ. 0) GO TO 9999
        KOUNTB=0

C
C  NCOLS=NUMBER OF COLUMNS LEFT TO PRINT
C  JCOLS=CURRENT NUMBER OF COLUMNS BEING PRINTED
C
        IF (OSUB) IWIDE=IWIDE-1
        NCOLS=ICOLS
        JCOLS=IWIDE
 160    IF (NCOLS.GE.IWIDE) GO TO 165
        JCOLS=NCOLS
 165    NCOLS=NCOLS-IWIDE
C
C       IF AREA OUTPUT IS WANTED, AND THERE IS ROOM FOR IT IN THIS
C       SECTION, NAREA=TRUE
C
        IF ((OAREA).AND.(JCOLS.LE.IWIDE-1)) NAREA=.TRUE.
        NCHARS=0
C
C       IF AREA ONLY, IS PRINTED IN THIS SECTION, DON'T GET ATTRIBUTES
C
        IF ((NAREA).AND.(JCOLS.EQ.0)) GO TO 30
C
C.......PROCESS COLUMNS, JCOLS AT A TIME
C
        KOUNT=0
  21    CONTINUE
        KOUNT=KOUNT+1
        KOUNTB=KOUNTB+1
        IHEAD(KOUNT,1)=IHEADB(KOUNTB,1)
        IHEAD(KOUNT,2)=IHEADB(KOUNTB,2)
        IHEAD(KOUNT,3)=IHEADB(KOUNTB,3)
        DO 23 J=1,10
          LABEL(KOUNT,J)=LABELB(KOUNTB,J)
  23    CONTINUE
        NCHARS=NCHARS+10
        IF (KOUNT.EQ.JCOLS) GO TO 30
        GO TO 21
C
C  INPUT DONE.  CHECK TO MAKE SURE TABLE FITS
C
  30    CONTINUE
        IF(NCHARS.GT.IWIDE*10) GO TO 903
C
C      WRITE HEADER ON FIRST SECTION OF REPORT
C
        IF (.NOT.LABL) GO TO 1016
        CALL GTNAM(INDEX,0,2h  ,MAP,IER)
        IF (NCOLS.NE.(ICOLS-IWIDE)) GO TO 1016
        IF (.NOT.HARD) WRITE(NPRNT,1015) (MAPin(I),I=1,25)
        IF (HARD) WRITE(ICHAN4,1015) (MAPin(I),I=1,25)
 1015   FORMAT(//15X,'SUMMARY FOR MAP ',25A2)
 1016   CONTINUE
C
C  BUILD COLUMN TITLE BLOCK
C
        DO 40 I=1,IWIDTH
        ITIT(I)=IBLK
        ncard(i)=32
  40    CONTINUE
C
        IPT=0
        IF ((NAREA).AND.(JCOLS.EQ.0)) GO TO 52
        DO 50 I=1,JCOLS
c
c  right justify labels
c
        iptt=ipt+11
        DO 45 J=10,1,-1
        ipt=ipt+1
        if(label(i,j).ne.32)then
        IPTt=IPTt-1
        ITIT(IPTt)=LABEL(I,J)
        endif
  45    CONTINUE
        IPT=IPT+1
  50    CONTINUE
  52    CONTINUE
C
C  IF AREA TO BE OUTPUT, ADD THIS LABEL TO TITLE BLOCK
C

        IF(.NOT.NAREA) GO TO 36
        DO 38 I=1,10
          IPT=IPT+1
          ITIT(IPT) = IBLK
          IF (IDTYP .EQ. 2) ITIT(IPT)=LLEN(I)
          IF (IDTYP .EQ. 3) ITIT(IPT)=LAREA(I)
  38    CONTINUE
  36    CONTINUE
C
C  CAPTURE NUMBER OF ITIT COORDS BEING OUTPUT
        NUMITIT=IPT
C
C  WRITE OUT COLUMN HEADING
C
        IF (.NOT.LABL) GO TO 41
        IF((.NOT.HARD).AND.(.NOT.OSUB))
     +   WRITE(NPRNT,1020) (ITIT(I),I=1,NUMITIT)
        IF((HARD).AND.(.NOT.OSUB))
     +   WRITE(ICHAN4,1020) (ITIT(I),I=1,NUMITIT)
        IF(.NOT.HARD.AND.OSUB) WRITE(NPRNT,1093) (ITIT(I),I=1,NUMITIT)
        IF(OSUB.AND.HARD) WRITE(ICHAN4,1093) (ITIT(I),I=1,NUMITIT)
 1093   FORMAT(//'  ID  SUBJECT    ',112a1)
 1020   FORMAT(//'  ID  ',124a1)
   41   CONTINUE
C
C  SET LINE COUNTER
C
        LINES=4
        LOUNT=3
C
C  NOW GET THE ATTRIBUTE INFORMATION
C
        INTO=0
        JFILEL=1
C
        IF ((NAREA).AND.(JCOLS.EQ.0)) GO TO 113

        DO 100 I=1,JCOLS
        LOCATE=IHEAD(I,3)
        ITYPE=IHEAD(I,1)
        NWORDS=IHEAD(I,2)
        IF(NWORDS.EQ.2) NWORDS=2
        IPT=1
        KOUNT=1
        LIMIT=128/NWORDS
        INC=LIMIT
        LOWER=1
        UPPER=NWORDS
        CRE=.TRUE.
C
C  ENTER DATA LOOP
C
        DO 90 JINDEX=1,POLYGON,INC
        IF((JINDEX+INC-1).LE.POLYGON) GO TO 85
        LIMIT=POLYGON-JINDEX+1
  85    CONTINUE
        CALL RDBLK(CHANEL,LOCATE,IBUFF,1,IER)
C
C  ENTER ITEM CHECK LOOP
C
        DO 80 TIMES=1,LIMIT
        IF(KOUNT.EQ.ITEM(IPT)) GO TO 79
        GO TO 78
 79     CONTINUE
        LOUT=0
        DO 75 J=LOWER,UPPER
        LOUT=LOUT+1
        INTO=INTO+1
        IVALS=IBUFF(J)
C
C.......DETERMINE WHICH SCRATCH FILE TO WRITE TO
C
        IREC1=INTO
        CALL RTEMP(IREC1,IREC2,JFILE,JFILEL,CRE)
        WRITE(88,REC=IREC2) IVALS
        IF(LOUT.EQ.10) GO TO 76
  75    CONTINUE
  76    CONTINUE
  77    IPT=IPT+1
 78     KOUNT=KOUNT+1
        LOWER=LOWER+NWORDS
        UPPER=LOWER+NWORDS-1
C
  80    CONTINUE
 89     CONTINUE
        LOCATE=LOCATE+1
        LOWER=1
        UPPER=NWORDS
C
  90    CONTINUE
 100    CONTINUE
C
C  DATA TRANSFER LOOP COMPLETE.  NOW ENTER TABLE PRINTOUT LOOP
C
        WHERE(1)=1
        IF(JCOLS.EQ.1) GO TO 110
        DO 120 I=2,JCOLS
        NWORDS=IHEAD(I-1,2)
        IF(NWORDS.GT.10) NWORDS=10
        WHERE(I)=WHERE(I-1)+NTOTAL*NWORDS
 120    CONTINUE
 110    CONTINUE
 113    CONTINUE
        NCHARS=(JCOLS*10)+JCOLS*2
        IF(NAREA) NCHARS=NCHARS+12
        IPT=1
        ISTART2=ISTART
        CRE=.FALSE.
        DO 150 I=1,NTOTAL
        CALL CLEAR(ITIT,132)
        CALL CLEAR(NCARD,132)
        IF(.NOT.OSUB) GO TO 37
        CALL GETFAST(ISTART2,MBR,IPOINT,ISUBJ,IATTR,IXTRA,IER)
        ISTART2=ISTART2+1
        CALL RDBLK(10,IPOINT,IBUFF,1,IER)
        IPOINT=IBUFF(24)
        CALL GETSUB(10,IPOINT,IBUFF,isub,IER)
  37    CONTINUE
        KOUNT=0
        IF ((NAREA).AND.(JCOLS.EQ.0)) GO TO 1395
        DO 140 J=1,JCOLS
        POINT=WHERE(J)
        ITYPE=IHEAD(J,1)
        NWORDS=IHEAD(J,2)
        IF(NWORDS.GT.10) NWORDS=10
        IF(ITYPE.EQ.2) GO TO 125
        IF(ITYPE.EQ.3) GO TO 200
        MNDEX=POINT+IPT-1
        IREC1=MNDEX
        CALL RTEMP(IREC1,IREC2,JFILE,JFILEL,CRE)
        READ(88,REC=IREC2) KVAL
        write(NUMB,1060) KVAL
 1060   FORMAT(I10)
        GO TO 130
 125    CONTINUE
        IREC1=POINT+(IPT*2-1)-1
        CALL RTEMP(IREC1,IREC2,JFILE,JFILEL,CRE)
        READ(88,REC=IREC2) IV(1)
        IREC1=POINT+(IPT*2)-1
        CALL RTEMP (IREC1,IREC2,JFILE,JFILEL,CRE)
        READ(88,REC=IREC2) IV(2)
        write(NUMB,1065) RNUM
 1065   FORMAT(F10.3)
  130   CONTINUE
        DO 135 L=1,10
        KOUNT=KOUNT+1
        NCARD(KOUNT)=ichar(NUMB(L:L))
 135    CONTINUE
        GO TO 139
C
C  CHARACTER BUILD
C
 200    CONTINUE
        DO 215 L=1,10
  215  JCOM(L)=32
        IPT1=(IPT-1)*NWORDS
        DO 210 L=1,NWORDS
        IREC1=POINT+IPT1+L-1
        CALL RTEMP(IREC1,IREC2,JFILE,JFILEL,CRE)
        READ(88,REC=IREC2) JCOM(L)
        IF(JCOM(L).EQ.0) JCOM(L)=32
 210    CONTINUE
 216    CONTINUE
        kkount=kount+11
        DO 220 L=10,1,-1
        kount=kount+1
        if(jcom(l).ne.32)then
        KKOUNT=KKOUNT-1
        NCARD(KKOUNT)=JCOM(L)
        else
        ncard(kount)=32
        endif
 220    CONTINUE
 139    CONTINUE
        KOUNT=KOUNT+1
        NCARD(KOUNT)=32
 140    CONTINUE
1395    CONTINUE
        IPT=IPT+1
C
C  IF AREA REQUIRED,ADD IT TO OUTPUT STRING
C
        IF(.NOT.NAREA) GO TO 148
        RNUM=AREA(I)
        write(NUMB,1065) RNUM
        DO 145 L=1,10
        KOUNT=KOUNT+1
        NCARD(KOUNT)=ichar(NUMB(L:L))
 145    CONTINUE
 148    CONTINUE
C        CALL UNPACK(NCARD,132)
        IF ((.NOT.OSUB).AND.(.NOT.HARD))
     +        WRITE(NPRNT,1070) ITEM(I),(NCARD(L),L=1,NCHARS)
        IF ((.NOT.OSUB).AND.(HARD))
     +        WRITE(ICHAN4,1070) ITEM(I),(NCARD(L),L=1,NCHARS)
 1070   FORMAT(1X,I4,1X,126a1)
        IF((OSUB).AND.(.NOT.HARD))
     +   WRITE(NPRNT,1094) ITEM(I),(isub(L),L=1,5),
     1  (NCARD(L),L=1,NCHARS)
        IF((OSUB).AND.(HARD))
     +   WRITE(ICHAN4,1094) ITEM(I),(isub(L),L=1,5),
     1  (NCARD(L),L=1,NCHARS)
 1094   FORMAT(1X,I4,1X,5A2,1X,116a1)
        LOUNT=LOUNT+1
C
        IF (HARD) GO TO 1095
        CALL CONTIN(LINES,IQUIT)
        IF (IQUIT .EQ. 1) GO TO 9999
        IF (LINES .NE. 1) GO TO 149
        IF (.NOT.LABL) GO TO 1096
        IF ((.NOT. OSUB).AND.(HARD))
     +   WRITE(ICHAN4,1020) (ITIT(L),L=1,NUMITIT)
        IF ((.NOT.OSUB).AND.(.NOT.HARD))
     +   WRITE(NPRNT,1020)(ITIT(L),L=1,NUMITIT)
        IF ((OSUB).AND.(HARD)) WRITE(ICHAN4,1093) (ITIT(L),L=1,NUMITIT)
        IF ((OSUB).AND.(.NOT.HARD))
     +   WRITE(NPRNT,1093)(ITIT(L),L=1,NUMITIT)
1096    CONTINUE
        LINES = 3
1095    CONTINUE
C
        IF (.NOT.HARD) GO TO 150
 149    IF (LOUNT.LE.55) GO TO 150
        LOUNT=2
        IF((.NOT.OSUB).AND.(HARD))
     +   WRITE(ICHAN4,1020) (ITIT(L),L=1,NUMITIT)
        IF((OSUB).AND.(HARD)) WRITE(ICHAN4,1093) (ITIT(L),L=1,NUMITIT)
C
 150    CONTINUE
        IF (NCOLS.GT.0) GO TO 160
        IF ((NCOLS.EQ.0).AND.(OAREA)) GO TO 160
C
C  ALL FINISHED. LETS WRAP THINGS UP
C
9999     go to 9898   
C
C  ERROR RETURNS
C
 900    WRITE(NPRNT,3000)
3000    FORMAT('DID NOT SPECIFY ACTIVE MAP ID')
        LINES=LINES+2
        GO TO 9999
C
 901    WRITE(NPRNT,3010) IER
3010    FORMAT('COULD NOT OPEN MAP FILE  ERROR',I5)
        LINES=LINES+2
        GO TO 9999
 902    WRITE(NPRNT,3020) IER
        write(*,'(1x,25a1)')mapname
3020    FORMAT(' *REPORT*  COULD NOT OPEN ATTRIBUTE FILE  ERROR',I6)
        LINES=LINES+2
        GO TO 9999
 903    WRITE(NPRNT,3030)
3030    FORMAT('TO MANY COLUMNS SPECIFIED IN REPORT TABLE')
        LINES=LINES+2
        GO TO 9999
 905    WRITE(NPRNT,3050)
 3050   FORMAT('THIS VERSION REQUIRES 2500 POLYGONS OR LESS')
        LINES=LINES+2
        GO TO 9999
 911  WRITE(NPRNT,3011)
 3011  FORMAT(' *REPORT* COULD NOT OPEN <DESCRIBE> FILE')
       LINES=LINES+2
       GO TO 9999
C
 907  WRITE(NPRNT,3070) IER
 3070 FORMAT(' COULD NOT OPEN <LINE.PTR>FILE -  ERROR',I5)
      LINES=LINES+2
      GO TO 9999
C
 915  WRITE(NPRNT,3015)
 3015 FORMAT(' *REPORT* COULD NOT CREATE LINE.PTR ON DISK')
      GO TO 9999
C
 916  write(*,*)' Error on accessing input map '
      GO TO 9999
C
 918  WRITE(NPRNT,3018) (MAP(I),I=1,15),IER
 3018 FORMAT(' ERROR OPENING PRINTER FILE ',15A2,'  ERROR',I5)
      GO TO 9999
C
9898    continue
        END
