C*********************************************************************
C
C
C          S U B R O U T I N E   M A E V A L
C
C  FUNCTION - GIVEN A STACK IN REVERSE POLISH (ISTAK), EVALUATE
C             A MOSS MULTIPLE ATTRIBUTE FILE AGAINST THE QUERY
C             AND RETURN A HITS ARRAY (HITS) INDICATING WHICH
C             ITEMS MET THE SEARCH CRITERIA.
C********************************************************************
C
      SUBROUTINE MAEVAL(ISTAK,NSYMB,IMAP,IREL,IM,mchan,NHITS,IER)
C
$Include:'dbchan.inc'
      COMMON /IO/ NPRNT,IOIN
$Include:'work.inc'
      COMMON /UNIT/ CHANEL,ATRBTE,POLYGON,ADRESS
C
      INTEGER kitty(1000)
      INTEGER ISUB(72)
      DIMENSION IT(2)
      DIMENSION ISTAK(128),IREL(20,37),IMAP(20,2)
      INTEGER CHANEL,ATRBTE,POLYGON,ADRESS,WORD,BIT
      INTEGER STRING(72),ONE,TWO
      LOGICAL ALLBLNK,bitset
      EQUIVALENCE (IT(1),VAL)
C
       map(1)=1h1
       i91=91
       CALL OPENF(i91,map,3,2000,2,IER)
C
      IER=0
      IBLNK=32
      MAXFEA=0

C
C  CHECK FOR SINGLE MAP CASE
C
      TWO=0
C
C  OPEN TEMP FILE FOR SEARCH RESULTS ON RELATIONALS
C
C
 200  CONTINUE
      TWO=TWO+1
      IF(TWO.GT.IM) GO TO 300
      LOCATE=IMAP(TWO,1)
      ITYPE=IMAP(TWO,2)
      KREL=IREL(TWO,1)
      NCHARS=IABS(ITYPE)
      IF(ITYPE.LT.0) ITYPE=3
C
      GO TO (201,202,204),ITYPE
 201  VAL=IREL(TWO,2)
      GO TO 205
 202  IT(1)=IREL(TWO,2)
      IT(2)=IREL(TWO,3)
      GO TO 205
 204  CONTINUE
      DO 203 I=1,36
         string(I) = IREL(TWO,I+1)
 203  CONTINUE
      VAL=0.
      call unpack(string,72)
C
 205  CONTINUE
C
C
C  ZERO HITS ARRAY
C
      NHITS=0
      CALL CLEAR(KITTY,256)
C
C  EVALUATE ACROSS POLYGONS
C
      DO 100 I=1,POLYGON
C
C  GET ATTRIBUTE
C
        CALL GETAT1(CHANEL,ITYPE,NCHARS,LOCATE,IBUFF,I,ISUB,VVAL,IER)
        IF (IER .NE. 0) GO TO 910
C
C  EVALUATE AGAINST CRITERIA
C
        KHIT=0
        IF (ITYPE .EQ. 3) KHIT=1
C
C  EVALUATE RETURNED VALUE AGAINST CRITERIA
C
      GO TO(20,30,40,50,60,70,80),KREL
C
C  ------------------- .LE. ------------------------
C
  20  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .LE. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 1
      write(*,*)'KHIT=',KHIT
C
C  REMOVE PRECEEDING BLANKS
C
      DO 21 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 23
 21   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND TRY TO FIND ONE THAT IS .GT.  IGNORE THE
C  PLACES WHERE BOTH STRINGS ARE BLANK
 23   CONTINUE
      WRITE (nprnt,1213) ISUB,STRING
1213  FORMAT ('ISUB=',72A1/'STRING=',72a1)
      DO 25 KL = 1,72
         IF (STRING(KL) .EQ. IBLNK .AND.
     +       ISUB(LK) .EQ. IBLNK) GO TO 24
         IF (ISUB(LK) .GT. STRING(KL)) KHIT = 0
   24    CONTINUE
         WRITE (nprnt,1414) KL,LK
1414     FORMAT ('KL,LK=',I3,1X,I3)
         WRITE (nprnt,1514) ISUB(LK),STRING(KL)
1514     FORMAT ('BYTE OF ISUB,STRING=',A1,1X,A1)
         write(*,*) 'KHIT=',KHIT
         LK = LK + 1
         IF ((LK .GT. 72) .OR. (KHIT .EQ. 0)) GO TO 90
 25   CONTINUE
      GO TO 90
C
C  --------------------- .LT. ------------------------
C
  30  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .LT. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 2
C
C  REMOVE PRECEEDING BLANKS
C
      DO 31 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 33
 31   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND TRY TO FIND ONE THAT IS .LT.  IGNORE THE
C  PLACES WHERE BOTH STRINGS ARE BLANK
 33   DO 35 KL = 1,72
         IF (STRING(KL) .EQ. IBLNK .AND.
     +       ISUB(LK) .EQ. IBLNK) GO TO 34
         IF (ISUB(LK) .LT. STRING(KL)) KHIT = 1
         IF (ISUB(LK) .GT. STRING(KL)) KHIT = 0
C
 34      LK = LK + 1
         IF (LK .GT. 72) KHIT = 0
         IF ((KHIT .EQ. 1) .OR. (KHIT .EQ. 0)) GO TO 90
 35   CONTINUE
      GO TO 90
C
C  ------------------- .EQ. ------------------------
C
  40  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .EQ. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 1
C
C  REMOVE PRECEEDING BLANKS
      DO 41 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 43
 41   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND SEE IF THEY ARE REALLY EQUAL
 43   DO 45 KL = 1,72
         IF (ISUB(LK) .NE. STRING(KL)) KHIT = 0
         if(isub(lk).eq.string(kkl))khit=1
         LK = LK + 1
         IF ((LK .GT. 72) .OR. (KHIT .EQ. 0)) GO TO 90
 45   CONTINUE
      GO TO 90
C
C  --------------------- .NE. -------------------------
C
  50  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .NE. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 0
C
C  REMOVE PRECEEDING BLANKS
      DO 51 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 53
 51   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND TRY TO MATCH THE CHARACTER STRINGS.  IGNORE
C  THE PLACES WHERE BOTH STRINGS ARE BLANK
 53   DO 55 KL = 1,72
         IF (STRING(KL) .EQ. IBLNK .AND.
     +       ISUB(LK) .EQ. IBLNK) GO TO 54
         IF (ISUB(LK) .NE. STRING(KL)) KHIT = 1
         if(isub(lk).eq.string(kl))khit=0
 54      LK = LK + 1
         IF ((LK .GT. 72) .OR. (KHIT .EQ. 1)) GO TO 90
 55   CONTINUE
      GO TO 90
C
C  ----------------------- .GT. --------------------------
C
  60  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .GT. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 2
C
C  REMOVE PRECEEDING BLANKS
C
      DO 61 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 63
 61   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND TRY TO FIND ONE THAT IS .LT.  IGNORE THE
C  PLACES WHERE BOTH STRINGS ARE BLANK
 63   DO 65 KL = 1,72
         IF (STRING(KL) .EQ. IBLNK .AND.
     +       ISUB(LK) .EQ. IBLNK) GO TO 64
         IF (ISUB(LK) .GT. STRING(KL)) KHIT = 1
         IF (ISUB(LK) .LT. STRING(KL)) KHIT = 0
C
 64      LK = LK + 1
         IF (LK .GT. 72) KHIT = 0
         IF ((KHIT .EQ. 1) .OR. (KHIT .EQ. 0)) GO TO 90
 65   CONTINUE
      GO TO 90
C
C  ---------------------- .GE. --------------------------
C
  70  CONTINUE
      IF (ITYPE .NE. 3  .AND. VVAL .GE. VAL) KHIT = 1
      IF (ITYPE .NE. 3) GO TO 90
      KHIT = 1
C
C  REMOVE PRECEEDING BLANKS
      DO 71 LK = 1,72
         IF (ISUB(LK) .NE. IBLNK) GO TO 73
 71   CONTINUE
      LK = 1
C
C  LOOP THROUGH AND TRY TO FIND ONE THAT IS .GT.  IGNORE THE
C  PLACES WHERE BOTH STRINGS ARE BLANK
 73   DO 75 KL = 1,72
         IF (STRING(KL) .EQ. IBLNK .AND.
     +       ISUB(LK) .EQ. IBLNK) GO TO 74
         IF (ISUB(LK) .LT. STRING(KL)) KHIT = 0
 74      LK = LK + 1
         IF ((LK .GT. 72) .OR. (KHIT .EQ. 0)) GO TO 90
 75   CONTINUE
      GO TO 90
C
C  --------------- CHARACTER SUBSTRINGING ---------------------
C
 80   CONTINUE
      KHIT = 0
      IF (ITYPE .NE. 3) GO TO 90
C
C  FIND THE END OF THE USER-ENTERED STRING
      ICNT = 73
 81   ICNT = ICNT - 1
         IF (ICNT .EQ. 0) GO TO 90
         IF (STRING(ICNT) .NE. IBLNK) GO TO 82
      GO TO 81
C
C  CHECK THE FIRST CHARACTER OF THE INPUT STRING AGAINST ALL
C  OF THE CHARACTERS IN THE ATTRIBUTE STRING, TILL A MATCH.
 82   LK = 0
 83   LK = LK + 1
         IF (LK .GT. 72) GO TO 90
         IF (ISUB(LK) .EQ. STRING(1)) GO TO 84
      GO TO 83
C
C  WE FOUND THE FIRST CHARACTER TO BE A MATCH, NOW SEE IF
C  THE REST OF THE STRING IS GOING TO MATCH AS WELL
 84   IF (ICNT .EQ. 1) KHIT = 1
      IF (ICNT .EQ. 1) GO TO 90
      ITLK = LK
      DO 87 KL = 2,ICNT
         ITLK = ITLK + 1
         IF (ITLK .GT. 72) GO TO 90
         IF (ISUB(ITLK) .EQ. STRING(KL)) GO TO 87
         GO TO 83
 87   CONTINUE
      KHIT = 1
      GO TO 90
C
C  NOW FINISH UP
C
90    CONTINUE
      IF (KHIT .EQ. 0) GO TO 100
      WORD=(I-1)/16+1
      BIT=I-(WORD-1)*16
      MAXFEA=MAX0(MAXFEA,WORD)
      KITTY(WORD)=ibset(kitty(word),BIT-1)
100   CONTINUE
      WRITE(i91,REC=TWO) KITTY
      GO TO 200
C
C  ALL POLYGONS PROCESSED FOR ALL RELATIONS.  NOW DO BOOLEAN WORK
C
 300  call boolog(maxfea,kitty,istak,nsymb)
C
C  WE HAVE EVALUATED ALL RELATIONS.  WE NOW HAVE A SET OF BITMAPS
C  LETS PERFORM THE BOOLEAN LOGIC
C  AND HERE WE GO
C      LOC1=1
C      LOC2=2
C      FULL1=.FALSE.
C      FULL2=.FALSE.
C      IGO=0
C      IOSTCK=0
C      ACESES=0
C      KS=0
C  392 IGO=IGO+1
C      IDOWN=ISTAK(IGO)
C      IF(IDOWN.LT.0) GO TO 410
C      KS=KS+1
C      IF(FULL1) GO TO 396
C      FULL1=.TRUE.
C 394  READ(91,REC=IDOWN) KITTY
C      DO 3994 KKL=1,MAXFEA
C      LHITS(KKL,loc1)=KITTY(KKL)
C 3994 continue
C      IF(IGO.LT.NSYMB) GO TO 392
C      GO TO 450
C  396 I=LOC1
C      LOC1=LOC2
C      LOC2=I
C      IF(FULL2) GO TO 398
C      FULL2=.TRUE.
C      GO TO 394
C 398  CONTINUE
C      IOSTCK=IOSTCK+1
C      ACESES=ACESES+1
C      DO 3955 KL=1,MAXFEA
C 3955 KITTY(KL)=LHITS(KL,LOC1)
C      WRITE(92,REC=IOSTCK) KITTY
C      GO TO 394
C 410  CONTINUE
C      IF(IDOWN.NE.-5) GO TO 415
C 415  CONTINUE
C      IF(FULL2) GO TO 418
C      READ(92,REC=IOSTCK) KITTY
C      DO 3966 KKL=1,MAXFEA
C 3966 LHITS(KKL,LOC2)=KITTY(KKL)
C      IOSTCK=IOSTCK-1
C 418  CONTINUE
C      IF(IDOWN.NE.-4) GO TO 420
C       DO 419 J=1,MAXFEA
C       LHITS(J,LOC1)=iand(LHITS(J,LOC1),LHITS(J,LOC2))
C  419  CONTINUE
C      GO TO 424
C  420  CONTINUE
C       IF(IDOWN.NE.-3) GO TO 980
C       DO 422 J=1,MAXFEA
C       LHITS(J,LOC1)=ior(LHITS(J,LOC1),LHITS(J,LOC2))
C  422  CONTINUE
C  424  FULL2=.FALSE.
C       IF(IGO.LT.NSYMB) GO TO 392
C  450  IF(IOSTCK.NE.0.OR.FULL2) GO TO 980
C       IF(LOC1.EQ.1) GO TO 460
C       DO 453 J=1,MAXFEA
C       LHITS(J,1)=LHITS(J,2)
C  453  CONTINUE
C  460  CONTINUE
C
C  ACTIVATE POLYGONS
C
C       DO 465 I=1,MAXFEA
C 465   KITTY(I)=LHITS(I,1)
C
       close(i91)
C
       CALL RDBLK(mchan,1,IBUFF,1,IER)
       INDEX=IBUFF(64)+IBUFF(65)+2
       CALL OPENF(icdcfa,idesfa,1,512,2,IER)
       DO 500 I=1,POLYGON
         CALL RDBLK(mchan,INDEX,IBUFF,1,IER)
         WORD=(I-1)/16+1
         BIT=I-(WORD-1)*16
         bitset=bTEST(KITTY(WORD),BIT-1)
         IF(.not.bitset) GO TO 490
         NHITS=NHITS+1
         CALL LINKUP(mchan,INDEX,1,ibuff,1)
 490     CONTINUE
         INDEX=IBUFF(1)
  500  CONTINUE
C
C  CLOSE TEMPORARY FILES
C
      CALL PUTFAST(-999,IBUFF(1),INDEX,IBUFF(15),INDEX,INDEX,IER)
      GO TO 90000
C
C  ERRORS
C
 910  CONTINUE
      NHITS = 0
      WRITE(NPRNT,3010) IER
 3010 FORMAT(' *MAEVAL*  ERROR FROM GETAT1 ERROR ',I5)
      GO TO 90000
C
 980  CONTINUE
      NHITS=0
      WRITE(NPRNT,3080)
 3080 FORMAT(' *MAEVAL*  INTERNAL CONSISTENCY ERROR IN EVALUATION')
C
90000 CONTINUE
      IIER = IER
       CLOSE(icdcfa,iostat=IER)
      IER = IIER
C
      RETURN
      END
