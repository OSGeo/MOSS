$Include:'dbchan.inc'
        COMMON /IO/ NPRNT,IOIN
$Include:'mfast.inc'
        COMMON /TYPE/ IDATYP(40),NTYPS
        COMMON /WORK/ IBUFF(128),MAP(25),ICOM(10),JCOM(10)
        COMMON /WHMAP/ ISTRCT(300),NSTRCT
        COMMON /STRNG/ ICARD(80),K,lenicd
        COMMON /PNTFET/ NPOINT
        DIMENSION ISUB(15),isub2(30)
        character*30 isub1
        DIMENSION IA(2),IL(2),mbr(8)
        DIMENSION IARR1(1)
        REAL IWIND(4),IX1,IX2,IY1,IY2,LOWER,NSIZE
        DIMENSION ISIZE(2)
        INTEGER ABOVE,BELOW,mapname(25)
        EQUIVALENCE (AREA,IA(1)),(RLEN,IL(1))
C
C ****************************************************************
C
C            P R O G R A M     S I Z E
C
C  FUNCTION - SELECT LINES AND POLYGONS ON THE BASIS OF LENGTH
C             AND SIZE CRITERIA
C **************************************************************
C
C
C   initialize
C
      call initl(ier)
      if(ier.ne.0)stop
C
C  SET PROMPT SWITCH
C
      IFLAGL=0
      NSTART=NPOINT
      LINES=1
      IPROMT=0
C
C  SET LIMIT FOR NUMBER OF NEW ACTIVE POLYGONS
C
        NDIM=5000
C
C  OPEN FAST FILE
C
        CALL OPENF(icdcfa,idesfa,1,512,2,IER)
C
C  GET ACTIVE DATA SETS
C
      CALL DAGET(ICARD,K,iarr1,1,MACTS)
C
C  ANY ACTIVE SETS SPECIFIED
C
      IF(MACTS.NE.0) GO TO 10
C
C  NO. SET PROMPT SWITCH AND GET INFO
C
      IPROMT=1
      WRITE(NPRNT,1000)
 1000 FORMAT(' ENTER ACTIVE MAP I.D'\)
      CALL READIN(ICARD,lenicd,K,istop)
      CALL DAGET(ICARD,K,IArr1,1,MACTS)
      LINES=LINES+3
C
C  GET CORRECT F.I.T FOR THIS ACTIVE DATA SET
C
  10  IDD=Iarr1(1)
      IFTYP=IDATYP((IDD/7)+1)
C
C  CHECK FOR VALID DATA TYPE
C
      IF(IFTYP.EQ.6.OR.IFTYP.EQ.7) GO TO 900
      IF(IFTYP.EQ.1.OR.IFTYP.EQ.11) GO TO 902
C
C  GET RELATIONSHIPS
C
      CALL FNUM(ICARD,80,TLOWER,K)
      IF(TLOWER.NE.0.0) GO TO 30
C
C PROMPT USER FOR LOWER LIMIT
C
      IPROMT=1
  25  IF(IFTYP.EQ.2) WRITE(NPRNT,1002)
 1002 FORMAT(38H ENTER MININUM LINE LENGTH (IN MILES)   ,\)
      IF(IFTYP.EQ.3) WRITE(NPRNT,1003)
 1003 FORMAT(38H ENTER MININUM POLYGON SIZE (IN ACRES)  ,\)
      CALL READIN(ICARD,lenicd,K,istop)
      CALL FNUM(ICARD,80,TLOWER,K)
      IF(IPROMT.EQ.1) GO TO 35
C
C  GET UPPER BOUND
C
  30  CONTINUE
      CALL FNUM(ICARD,80,TUPPER,K)
      IF(TUPPER.NE.0.0) GO TO 40
C
C  PROMPT FOR UPPER BOUND
C
  35  CONTINUE
      IF(IFTYP.EQ.2) WRITE(NPRNT,1004)
 1004 FORMAT(37H ENTER MAXIMUM LINE LENGTH (IN MILES)  ,\)
      IF(IFTYP.EQ.3) WRITE(NPRNT,1005)
 1005 FORMAT(38H ENTER MAXIMUM POLYGON SIZE (IN ACRES)  ,\)
      CALL READIN(ICARD,lenicd,K,istop)
      CALL FNUM(ICARD,80,TUPPER,K)
  40    CONTINUE
        UPPER=TUPPER + .01
        LOWER=TLOWER + .01
        if(upper-lower.le..0001)then
          lower=tlower - 0.01
        endif
  49  CONTINUE
C
C  GET THE CURRENT WINDOW
C
      CALL WHWND(IX1,IY1,IX2,IY2)
      IF(IX2-IX1.EQ.0.OR.IY2-IY1.EQ.0) GO TO 901
C
C  NOW SEARCH THE DATA BASE
C
      LUNTS=0
      BELOW=0
      ABOVE=0
C
C  GET POINTER BOUNDS FOR ACTIVE SET TO BE PROCESSED
C
      IDD=IARR1(1)
      CALL APGET(IDD,ISTART,ISTOP,NTOTAL)
C
C  GET MAP NAME FROM STRUCTURE TABLE
C
        CALL GTMAP(ICOM,IDD)
C
C  OPEN DATA CHENNEL TO MAP
C
        call adddir(icom,mapname)
        CALL OPENF(10,mapname,1,256,2,IER)
        ICHAN=10
        if(ier.ne.0)go to 908
C
C  LOOP THROUGH FOR ACTIVE DATA SET IDD
C
      DO 80 LN=ISTART,ISTOP
C
      CALL GETFAST(LN,MBR,INDEX,isubj,iattr,ixtra,IER)
      IF(IER.NE.0) GO TO 80
C
C  GET CURRENT WINDOW AND SEE IF ITEMS FALLS IN WINDOW
C
      CALL GETWND(INDEX,IWIND,ICHAN)
      IF(INVWND(IWIND(1),IWIND(2),IWIND(3),IWIND(4),
     1 IX1,IX2,IY1,IY2).EQ.0) GO TO 80
C
C  GET ITEM HEADER AND EXTRACT AREA OR LENGTH
C
        CALL RDBLK(ICHAN,INDEX,IBUFF,1,IER)
        IF(IFTYP.EQ.2) GO TO 889
        IA(1)=IBUFF(7)
        IA(2)=IBUFF(8)
        GO TO 890
 889    IL(1)=IBUFF(7)
        IL(2)=IBUFF(8)
 890    CONTINUE
        IF(IFTYP.EQ.3) NSIZE=AREA
        IF(IFTYP.EQ.2) NSIZE=RLEN
C
C  DOES AREA OR LENGTH FALL WITHIN BOUNDS ?
C
      IF(NSIZE.Lt.LOWER.OR.NSIZE.GT.UPPER) GO TO 75
C
C  ITEM FALLS IN RANGE. SAVE INFO
C
      LUNTS=LUNTS+1
C
C  CHECK FOR ARRAY OVERFLOW
C
      IARR1(1)=INDEX
      NPOINT=NPOINT+1
C      CALL WRITR(15,NPOINT,IARR1(1),1,IER)   <point.dt>
      CALL PUTFAST(NPOINT,IBUFF(15),INDEX,IBUFF(24),INDEX,INDEX,IER)
      GO TO 80
C
C  ACCUMULATE INFO ABOUT ITEMS FALLING ABOVE AND BELOW RANGE
C
  75  CONTINUE
      IF(NSIZE.LT.LOWER) BELOW=BELOW+1
      IF(NSIZE.GT.UPPER) ABOVE=ABOVE+1
C
  80  CONTINUE
  90  CONTINUE
C
C  ALL DATA ITEMS HAVE BEEN TESTED.  CLOSE DESCRIBE.FA
C
 880    CALL PUTFAST(-999,IBUFF(15),INDEX,IBUFF(24),INDEX,INDEX,IER)
C
C  WRITE OUT THE MISSED ONES
C
       WRITE(NPRNT,1008) BELOW,ABOVE
 1008  FORMAT(/,1X,I5,' ITEMS BELOW RANGE AND ',I5,' ITEMS ABOVE RANGE')
       LINES = LINES + 2
C
C  CHECK FOR NULL RESULT
C
        IF(LUNTS.ne.0) then
C
C  UPDATE STRUCTURE TABLE
        CALL FILLC(ISUB,15,(2H  ))
        write(ISUB1,1009) TLOWER,TUPPER
 1009   FORMAT(2F13.4)
        do 11 l=1,30
   11   isub2(l)=ichar(isub1(l:l))
        call packc(isub2,isub,30)
        call packc(icom,jcom,10)
        CALL ADSTAD(IER,ICOM,LUNTS,NSTART+1,ISUB,7)
C
C  STORE TYPE IN IDATYP AND WRITE OUT RESULTS
C
       NTYPS=NTYPS+1
       IDATYP(NTYPS)=IFTYP
       WRITE(NPRNT,1010) LUNTS,NTYPS
 1010  FORMAT(1X,I5,' ITEMS FOR ACTIVE ID',I3)
       else
         write(*,*)'       NO ITEMS SELECTED'
       endif
C
C  ALL DONE. LETS RETURN
C
C
9999  CONTINUE
        CALL OUTCM
      LINES=1
      CLOSE(icdcfa,iostat=IER)
      CLOSE(10,iostat=IER)
      go to 9898
C
C  ERROR RETURNS
C
 900  write(*,*)' This command does not work with discrete raster data'
      GO TO 9999
 901  write(*,*)' Display window not set . Set window to active map(s)'
C
      GO TO 9999
 902  write(*,*)' This command does not work with point data'
      GO TO 9999
 908  write(*,*)' Not able to open input map'
      go to 9999
9898  continue
      END
