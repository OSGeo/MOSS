$Include:'dnames.inc'
$Include:'dbchan.inc'
      COMMON /OSTACK/ISTACK(200,3),NSTACK,NSREC
      COMMON /BOPRMS/IUD,NPTS1,NPTS2,NXYI,NLOBE,KLUE,NLIST,IFLLG
      COMMON /IPPY/  IPP(7)
$Include:'vwnd.inc'
      COMMON /OFFST/ XOFF,YOFF
$Include:'io.inc'
$Include:'whmap.inc'
      COMMON /DOT/IH,JH,IDS(353),JDS(353)
$Include:'strng.inc'
      COMMON /TABLE/ ITABLE(40)
      COMMON /OSAVE/ ISUB(15),NPOLYS,LTYPE2,IDISP,NOSAVE,ICTSUB
$Include:'work.inc'
      COMMON /TYPE/  IDATYP(40),NACTS
      COMMON /VALS/  TGR(2,200)
      COMMON /VALS1/ KGR(2,200),NEXT(2,200),IFORK(200)
$Include:'mfast.inc'
      COMMON /O/     FXG(4),FXR(4)
      COMMON /ITEMMS/ITEM1,ITEM2
$Include:'xypnts.500'
$Include:'pqpnts.500'
$Include:'rspnts.500'
$Include:'xrxr.500'
$Include:'xyxy.500'
C
      DIMENSION VWIND(4),LABL1(15),LABL2(15)
      DIMENSION IHEAD(256),label(10),mapin(25)
      DIMENSION NAME1(10),NAME2(10),mapname(25),mapout(25)
      REAL IX1,IY1,IX2,IY2
      EQUIVALENCE (XMIN,IBUFF(15)),(XMAX,IBUFF(17))
      EQUIVALENCE (YMIN,IBUFF(19)),(YMAX,IBUFF(21))
      EQUIVALENCE (IX1,VWIND(1)),(IX2,VWIND(2))
      EQUIVALENCE (IY1,VWIND(3)),(IY2,VWIND(4))
      DATA MAXINT /200/
      DATA ICHAN18/56/
     +     ICHAN3/3/,SXMIN/0.0/,
     +     SYMIN/0.0/,ATOL/0.0/,ICHANP/55/,ICHAN1/10/,ICHAN2/11/,
     +     ICH20/30/
C
C **********************************************************
C
C          P R O G R A M  O V E R L A Y
C
C
C  FUNCTION - THIS IS THE LOGICAL DRIVER FOR THE POLYGON
C             INTERSECTION UNION ROUTINE
C
C  RELEVENT VARIABLES/ARRAYS
C
C           IH    = NUMBER OF ISLANDS IN MAJOR
C           JH    = NUMBER OF ISLANDS IN MINOR
C           IDS   = ISLAND POINTERS FOR MAJOR
C           JDS   = ISLAND POINTERS FOR MINOR
C           FXG   = MBR FOR MAJOR FEATURE
C           FXR   = MBR FOR MINOR FEATURE
C           NPTS1 = # COORDINATE PAIRS IN MAJOR
C           NPTS2 = # COORDINATE PAIRS IN MINOR
C           IUD   = OVERLAY TYPE (1=AND, 2=OR, 3 =NOT)
C           NXYI  = # COORDINATE PAIRS GENERATED BY OVERLAY PROCESS
C           NLOBES= NUMBER OF NEW GENERATED FEATURES
C           KLUE  = RETURNED OVERLAY CONDITION
C           NPOLYS= TOTAL NUMBER CREATED FEATURES ENTIRE OVERLAY PROCESS)
C
C
C  DATA CHANNELS:
C
C                DISK ARRAYS   =  91-98 <SCRATCH FILES>
C                PREPRO FILE   =  55
C                FAST FILE     =  7
C                TEMP          =  56
C                TEMPSUB       =  57

C                ICHAN1        = FIRST MAP <10>
C                ICHAN2        = SECOND MAP <11>
C                ICH20         = FIRST MAP MULTIPLE ATT FILE  <30>
C                ICwork        = <iwork>.DT  <2>
C *******************************************************
C
C
C  SET SOME VARIABLES
C
      CALL initl(ier)
      if(ier.ne.0)stop
C
C  OPEN FAST FILE
C
       CALL OPENF(icdcfa,idesfa,1,512,2,IER)
       IF(IER.NE.0) then
       write(nprnt,1)
    1  format(/,1x,'* ERROR * - Opening <DESCRIBE.FA>')
       stop
       endif
C
C  GET ID'S TO OVERLAY
C
      IPROMT=0
      CALL POV2(label,ITP3,ICwork)
C
C  GET SUBJECT MERGE OPTION AND OVERLAY TYPE
C
      CALL POV1(IPROMT,MERLAB,IUD,label,JCOM,MLPNT,NCHARS,IREV)
      do 155 il=1,10
155   mapout(il)=jcom(il)
C
C  WRITE MAP NAME TO TEMP FILE
C
       write(ICHAN18)JCOM
C
C  GET POINTER SET AND NUMBER OF POLYGONS IN EACH AND
C
       INDEX1=ITABLE(1)
       INDEX2=ITABLE(2)
       CALL APGET(INDEX1,ISTAR1,ISTOP1,NTOT1)
       CALL APGET(INDEX2,ISTAR2,ISTOP2,NTOT2)
C
C
C  USER WISHES TO PROCEED. NOW GET THE CORRECT F.I.T'S
C  OF THE SOURCE FILES
C
      IFTYP1=IDATYP(INDEX1/7+1)
      IFTYP2=IDATYP(INDEX2/7+1)
      IF (IFTYP1 .NE. 3  .OR.  IFTYP2 .NE. 3) CALL PERR(5)
C
C  GET CURRRENT DISPLAY WINDOW
C
      CALL WHWND(IX1,IY1,IX2,IY2)
C
C  CHECK FOR ZERO WINDOW
C
      IF(IX2-IX1.EQ.0.0.OR.IY2-IY1.EQ.0.0) CALL PERR(4)
C
C  DO PREPROCESS
C           open < scratch file >
C
      map(1)=2hN
      CALL OPENF(ICHANP,MAP,3,256,2,IER)
      IF(IER.NE.0) GO TO 999
C
      CALL PREPRO(ICHANP,ISTAR1,ISTOP1,ISTAR2,ISTOP2,ATOL,ATOL,VWIND,
     + IER)
C

      CALL RDBLK(ICHANP,1,IBUFF,1,IER)
      LASTREC=IBUFF(1)
      NTOT1=IBUFF(2)
      IF(NTOT1.EQ.0) CALL PERR(1)
C
C  OPEN STACK FILE (USED TO STORE RESULT UNTIL PROCESSING ON A
C  MINOR MAJOR PAIR IS COMPLETED) <scratch file>
C
      CLOSE(icdcfa,iostat=IER)
      Map(1)=2Hz
      CALL OPENF(icdcfa,MAP,3,256,2,IER)
       IF(IER.NE.0) GO TO 999
C
C  PREPROCESS COMPLETE.  WE HAVE SOME MATCHES.  LETS DO THE OVERLAY
C
C
C  GET NAME OF SOURCE MAPS
C
       CALL CLEAR(ISTACK,60)
       CALL CLEAR(NAME1(1),10)
       CALL CLEAR(NAME2(1),10)
       CALL GTMAP(NAME1,INDEX1)
       CALL GTMAP(NAME2,INDEX2)
C
C  WRITE MAP NAMES TO SAVE TEMP FILE
C
C
C  OPEN INPUT FILES
C
       call adddir(name1,mapname)
       CALL OPENF(ICHAN1,mapname,1,256,2,IER)
       IF(IER.NE.0) go to 90101
       write(ichan18)mapname
       call adddir(name2,mapname)
       CALL OPENF(ICHAN2,mapname,1,256,2,IER)
       IF(IER.NE.0) go to 90101 
       write(ICHAN18)mapname
C
C  READ IN HEADER BLOCKS FROM MAPS
C
      CALL RDBLK(ICHAN1,1,IBUFF,1,IER)
      CALL RDBLK(ICHAN1,2,IHEAD(129),1,IER)
      CALL RDBLK(ICHAN2,1,IHEAD(1),1,IER)
C
C  SEE IF MAPS HAVE MULTIPLE ATTRIBUTES AND WHETER USER WANTS TO KEEP ANY
C
      CALL POV0(ICH20,IBUFF(76),IHEAD(76),NAME1,NAME2,IBUFF(78))
C
C  WRITE HEADER AND MULTIPLE ATT STUFF TO TEMP FILE
C
      IBUFF(65)=IBUFF(77)
      IF ( (IBUFF(78) .GT. 0  .OR.  IBUFF(78) .EQ. -1)  .OR.
     +     (IBUFF(79) .GT. 0  .OR.  IBUFF(79) .EQ. -1)) IBUFF(1)=-32767
      write(ICHAN18)(IBUFF(ll),ll=1,65)
      IF (IBUFF(1) .EQ. -32767) write(ICHAN18)(IBUFF(ll),ll=78,122)
C
C  WRITE OUT DATA TYPE OF RESULTING DATA
C
       write(ICHAN18)IFTYP2
C
C  NOW ENTER MAIN COMPUTATION LOOP
C
       WRITE(NPRNT,90190) NTOT1
90190  FORMAT(/,' TOTAL MAJOR POLYGONS',I5,/)
      CALL CLEAR(IPP(4),4)
C
C
      INDEX=1
C
      DO 200 II=1,NTOT1
C
C  READ BLOCK OF MINOR POLYS
C
      INDEX=INDEX+1
      CALL RDBLK(ICHANP,INDEX,IFBUFF(1),1,IER)
C
C  PULL I.D. OF MAJOR AND NUMBER OF MINORS TO PROCESS
C
      IDD1=IFBUFF(1)
      NTOT2=IFBUFF(2)
      IF(IUD.EQ.1.AND.NTOT2.EQ.0) GO TO 200
C
C  READ MAJOR POLY HEADER
C
      CALL RDBLK(ICHAN1,IDD1,IBUFF,1,IER)
C
C ITEM IN WINDOW.  WRITE IT OUT AND GET DATA
C
       WRITE(NPRNT,90200) II,IBUFF(5),IBUFF(24)-2
90200  FORMAT(' MAJOR POLYGON',I5,' ITEM',I5,' SUBJECT',I5)
C**
       ITEM1 = IBUFF(5)
C
C  GET DATA TYPE AND CHECK FOR ILLEGAL TYPE
C
      LTYPE1=IBUFF(6)
      IF(LTYPE1.EQ.1.OR.LTYPE1.EQ.2.OR.LTYPE1.EQ.5) CALL PERR(5)
C
C  GET ISLANDS
C
      CALL IGETIS(IBUFF,IDS,IH,ICHAN1,IDD1)
C
C  GET LABEL
C
      ISUB1=IBUFF(24)
      CALL GETSUB(ICHAN1,ISUB1,IFBUFF(129),LABL1,IER)
C
C  GET DATA
C
      FXG(1)=XMIN-XOFF
      FXG(2)=XMAX-XOFF
      FXG(3)=YMIN-YOFF
      FXG(4)=YMAX-YOFF
      NPTS1=1
      CALL iCORDXY(IBUFF,NPTS1,IDD1,FXG(1),FXG(3),ICHAN1)
      IPP(4)=0
       IPP(5)=0
      IDS(IH+1)=NPTS1
      IF(IH.EQ.0) GO TO 80
      CALL iISLWND(1,IH,IDS)
  80  CONTINUE
      IF(IH.GT.0) NPTS1=IDS(1)-1
C
C  NOW ENTER THE INNER COMPARISON LOOP
C
  95  MKOUNT=0
      KLL=2
C
      DO 100 JJ=1,NTOT2
C
C  PULL ID POINTER OF MINOR
C
        KLL=KLL+1
        IF(KLL.LE.128) GO TO 81
C
          KLL=1
        INDEX=INDEX+1
        CALL RDBLK(ICHANP,INDEX,IFBUFF(1),1,IER)
C
  81    CONTINUE
        IDD2=IFBUFF(KLL)
      IF(IDD2.LT.0) GO TO 100
      MKOUNT=MKOUNT+1
      IFBUFF(KLL)=-IFBUFF(KLL)
      CALL RDBLK(ICHAN2,IDD2,IBUFF,1,IER)
C**
      ITEM2 = IBUFF(5)

C
C  GET SUBJECT
C
        ISUB2=IBUFF(24)
        CALL GETSUB(ICHAN2,ISUB2,IFBUFF(129),LABL2,IER)
C
C  GET DATA TYPE
C
      LTYPE2=IBUFF(6)
      ITEMSH = IBUFF(5)
C
C  GET ISLAND POINTERS FOR SECOND POLYGON
C
      CALL IGETIS(IBUFF,JDS,JH,ICHAN2,IDD2)
C
C  GET POINT DATA
C
      FXR(1)=XMIN-XOFF
      FXR(2)=XMAX-XOFF
      FXR(3)=YMIN-YOFF
      FXR(4)=YMAX-YOFF
      NPTS2=0
      IF(IH.GT.0) NPTS2=1
       CALL iCORDPQ(IBUFF,NPTS2,IDD2,FXR(1),FXR(3),ICHAN2)
      CALL CLEAR(IPP(4),4)
      JDS(JH+1)=NPTS2
      IF(JH.EQ.0) GO TO 85
      CALL iISLWND(2,JH,JDS)
  85  CONTINUE
       IF(JH.GT.0) NPTS2=JDS(1)-1
C
C
C  CREATE NEW ATTRIBUTE
C
      IF(MERLAB.EQ.0) CALL MERSUB(LABL1,LABL2,ISUB)
      IF(MERLAB.EQ.1 .AND. IREV .EQ. 0)
     + CALL NEWSUB(MLPNT,NCHARS,LABL1,LABL2,ISUB)
      IF(MERLAB.EQ.1 .AND. IREV .EQ. 1)
     + CALL NEWSUB(MLPNT,NCHARS,LABL2,LABL1,ISUB)
C
      IPASSES=0
      IPSIGN=-1
C
  96  CONTINUE
      IFFLG=0
C
      CALL iBOOLE(FXG,FXR,16000,KGR,TGR,NEXT,IFORK,MAXINT,KERR)
C
C  A TRUE INTERSECTION OR UNION ?
C
      IF(KERR.EQ.3) GO TO 99
      IF(KERR.NE.0.OR.KLUE.EQ.1) GO TO 100
C
C  SURE IS.
C
      CALL FIGURE
C
      GO TO 97
C
C  COULD NOT RESOLVE.  TRY AGAIN
C
  99  CONTINUE
C
      IBEG=1
      CALL POSHFT(IPASSES,IPSIGN,JJ,IBEG,NPTS2,ITEMSH)
C
      GO TO 96
C
  97  CONTINUE
C
      IF(KLUE.EQ.2) GO TO 150
C
C      IF(IUD.NE.1.AND.JJ.LT.NTOT2) CALL LOADP(FXG,IDS,IH,NPTS1,IER)
C
 100  CONTINUE
C      IF(IUD.EQ.3.AND.MKOUNT.GT.0.AND.NSTACK.GT.1) GO TO 95
C      IF(IUD.EQ.3) CALL NOTISL
C      IF(IUD.EQ.3) write(nprnt,*) ' WANTING TO CALL NOTISL'
 150  CONTINUE
C      IF(IUD.NE.1) CALL DUMPOV(IER)
 200  CONTINUE
C
C  ANY NEW POLYGONS? IF NOT, PRINT MESSAGE AND RETURN
C
      IF(NPOLYS.EQ.0) CALL PERR(1)
C
C  DO DUMMY WRITE AS EOF TO TEMP FILE
C
      NOL=0
      WRITE(ICHAN18) (ISUB(I),I=1,15),(ISUB(I),I=1,5),NOL,NOL
C
       close(ichan2,iostat=ier)
       close(ichanp,iostat=ier)
       CLOSE(ICHAN1,iostat=IER)
       CLOSE(ICwork,iostat=IER)
       CLOSE(icdcfa,iostat=IER)
C  SAVE MAP
C
      ichan10=31
      call Openf(ichan10,mapout,0,256,2,ier)
      CALL iSAVWRK(ictsub,npolys,ichan18,ichan10)
C
       CALL OPENF(ICwork,iwork,1,512,2,IER)
C
C     UPDATE DIRECTORY
C
       CALL RDBLK(ICHAN10,1,IHEAD,1,IER)
       CALL WRBLK(ICHAN10,2,IHEAD(129),1,IER)
       CALL TUPDIR(ITP1,ITP2,ITP3,label,IHEAD,iwork,ICwork,IER)
C
       close(icwork,iostat=ier)
       close(ichan10,iostat=ier)
       go to 999
90101  write(*,90102)(mapname(il),il=1,25)
90102  format(/,1x,'Error accessing input map: ',25a2)
C
 999  CONTINUE
C
C
      END
